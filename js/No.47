function solution(s, n) {
    var answer = [];
    let lowArr = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
    let upeerArr = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]

    for (let i = 0; i < s.length; i++) {
        if (s[i] === " ") {
            answer.push(" ");
            continue;
        }
        else {
            for (let j = 0; j < lowArr.length; j++) {
                if (s[i] === lowArr[j]) {
                    answer.push(lowArr[(j + n) % 26]);
                    continue;
                }
            }
            for (let j = 0; j < upeerArr.length; j++) {
                if (s[i] === upeerArr[j]) {
                    answer.push(upeerArr[(j + n) % 26]);
                    continue;
                }
            }
        }
    }
    return answer.join("");
}

[코드 리뷰]
소문자 알파벳 배열과 대문자 알파벳 배열을 만들어 준 후
인자 s의 값과 일치하는 인덱스 위치를 찾아 n만큼 더해주었다
단, 인덱스의 범위를 초과할 수 있기 때문에 배열의 개수만큼 나눈 나머지 값의
인덱스를 배열에 추가해주었고
또한 공백은 그대로 공백으로 리턴해야하기 때문에 반복문 최초에 
조건문으로 공백일 경우 공백을 넣도록 하였다
마지막에 join문을 이용하여 다시 문자열로 바꾸어 리턴하였다
