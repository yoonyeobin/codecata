function solution(nums) {
    // 배열의 3개 수를 더하여 나오는 모든 값을 담기
    const numbers = [];

    for (let i = 0; i < nums.length - 2; i++) {
        for (let j = i + 1; j < nums.length - 1; j++) {
            for (let k = j + 1; k < nums.length; k++) {
                    numbers.push(nums[i] + nums[j] + nums[k]);
            }
        }
    }

    console.log(numbers)

    // numbers에서 소수가 몇개인지 찾기
    const answer = numbers.filter((num) => {

        for (let i = 2; i < num; i++) {
            if (num % i === 0) {
                return false;
            }
        }
        return true;
    })

    console.log(answer)

    return answer.length
}

[코드리뷰]
3중 for문을 통해 인자로 들어오는 배열의 서로 다른 3개의 요소를 더한 모든 경우의 값을 담아주었다.
filter 메서드를 통해 소수인 경우만 answer 값에 담아
answer의 길이를 반환하여주었다.

P.S 당연히 중복되는 소수는 제거해야 되는 줄 알고
친히 find 메서드 통해서 제거해주고 제출했더니 안 되더라...
왜 안 되는지 몰라서 1시간을 혼자 코드 붙잡고 고민했는데
설마 하고 지워보니 되네... 진짜 허탈한 문제였다...
